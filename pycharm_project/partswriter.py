__author__ = 'Edward'

class PartsWriter:

    def __init__(self, filename, materialmap):
        self.filename = filename
        self.matmap = materialmap

    def generate_evals(self, regions):
        lines = ""
        for region in regions:
            pt = region.evalpoint
            lines += "  " + str(region.id) + ": " + str(pt[0]) + ", " + str(pt[1]) + ", " + str(pt[2]) + \
                     ", 1.0: Eval point/\n"
        return lines

    def collapse_simplify(self, objects):
        index = 1
        sortedlist = sorted(objects, key=lambda o: o.id)
        for obj in sortedlist:
            obj.id = index
            index += 1


    def write(self, partname, bodies, regions, comment=""):
        file = open(self.filename, 'w')
        file.write("TFX_Parts\n")
        file.write("!- Parts file\n")
        file.write("!- Auto generated by partswriter.py in meshup project\n")
        file.write("!-\n")
        file.write(partname + ": " + comment + "\n")

        self.collapse_simplify(bodies)
        self.collapse_simplify(regions)

        evalregions = [x for x in regions if x.doeval]
        thispartmats = set([k.matid for k in regions])
        file.write("0, " + str(len(thispartmats)) + ", " + str(len(bodies)) + ", " + str(len(regions)) + ", " +
                   str(len(evalregions)) + "/\n")
        file.write(", ".join([str(k) + "=" + str(self.matmap[k]) for k in self.matmap if k in thispartmats]) + "/\n")
        for b in bodies:
            file.write(str(b) + "/\n")
        for r in regions:
            file.write(str(r) + "/\n")
        file.write(self.generate_evals(evalregions))
        file.close()

        file = open(self.filename[2:].split(".")[0] + ".rmap", 'w')

        for r in evalregions:
            pt = r.evalpoint
            file.write(str(r.id) + "\t" + str(pt[0]) + "\t" + str(pt[1]) + "\t" + str(pt[2]) + "\n")

        file.close()